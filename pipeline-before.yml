---
resource_types:

  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

resources:
    - name: backend-src
    type: git
    source:
      uri: ((backend.git.uri))
      branch: ((backend.git.branch))
      private_key: ((backend-git-private-key)) # stored in the vault

  - name: terraform-src
    type: git
    source:
      uri: ((terraform.git.uri))
      branch: ((terraform.git.branch))
      private_key: ((terraform-git-private-key)) # stored in the vault

  - name: backend-artifact
    type: s3
    source:
      bucket: ((backend.artifact.s3.bucket))
      region_name: ((backend.artifact.s3.region_name))
      regexp: ((backend.artifact.s3.regexp))
      access_key_id: ((backend-artifact-aws-key-id)) # stored in the vault
      secret_access_key: ((backend-artifact-aws-access-key))

  - name: slack
    type: slack-notification
    source:
      url: ((slack-webhook-url))

jobs:

  - name: backend-build
    plan:
      - aggregate:
        - get: src
          resource: backend-src
          trigger: true
      - task: build
        file: src/tasks/build.yml
      - put: backend-artifact
        params:
          file: build/backend-*.tgz
    on_failure:
      put: slack
      params:
        icon_emoji: ':boom:'
        silent: true
        attachments: |
          [{
            "text": "FAILED: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME>",
            "color": "danger"
          }]

  - name: terraform-backend-dev
    plan:
      - aggregate:
        - get: artifact # you can rename a resource to match a task's input this way
          resource: backend-artifact
          trigger: true
        - get: terraform-src
          trigger: false
      - task: terraform-backend-dev
        file: terraform-src/ci/tasks/terraform-backend.yml
        params:
          TERRAFORM_WORKSPACE: dev
          TERRAFORM_APPLY: true
          AWS_ACCESS_KEY_ID: ((terraform-aws-key-id)) # stored in the vault
          AWS_SECRET_ACCESS_KEY: ((terraform-aws-access-key))
        on_failure:
          put: slack
          params:
            icon_emoji: ':boom:'
            silent: true
            attachments: |
              [{
                "text": "FAILED: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME>",
                "color": "danger"
              }]

  - name: terraform-backend-demo
    plan:
      - aggregate:
        - get: artifact
          resource: backend-artifact
          passed: [terraform-backend-dev]
        - get: terraform-src
          passed: [terraform-backend-dev]
      - task: terraform-backend-demo
        file: terraform-src/ci/tasks/terraform-backend.yml
        params:
          TERRAFORM_WORKSPACE: demo
          TERRAFORM_APPLY: true
          AWS_ACCESS_KEY_ID: ((terraform-aws-key-id)) # stored in the vault
          AWS_SECRET_ACCESS_KEY: ((terraform-aws-access-key))
        on_failure:
          put: slack
          params:
            icon_emoji: ':boom:'
            silent: true
            attachments: |
              [{
                "text": "FAILED: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME>",
                "color": "danger"
              }]

  - name: terraform-backend-prod
    plan:
      - aggregate:
        - get: artifact
          resource: backend-artifact
          passed: [terraform-backend-demo]
        - get: terraform-src
          passed: [terraform-backend-demo]
      - task: terraform-backend-prod
        file: terraform-src/ci/tasks/terraform-backend.yml
        params:
          TERRAFORM_WORKSPACE: prod
          TERRAFORM_APPLY: true
          AWS_ACCESS_KEY_ID: ((terraform-aws-key-id)) # stored in the vault
          AWS_SECRET_ACCESS_KEY: ((terraform-aws-access-key))
        on_failure:
          put: slack
          params:
            icon_emoji: ':boom:'
            silent: true
            attachments: |
              [{
                "text": "FAILED: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME>",
                "color": "danger"
              }]


